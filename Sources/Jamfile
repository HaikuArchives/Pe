
SubDir TOP Sources ;

SubDirHdrs $(OBJECTS_DIR) Sources ;

if $(OSPLAT) = X86 {
	C++FLAGS += -Wno-sign-compare -Wno-overloaded-virtual ;
} else {
	# generate precompiled pe-headers on PPC:
	Depends libhekkel.so : $(PREFIX_FILE) ;
	PreCompile $(PREFIX_FILE) : [ FDirName $(TOP) Sources pe.pch++ ] ;
	C++FLAGS += -prefix $(PREFIX_FILE) ;
}

SAVED_DEFINES = $(DEFINES) ;
DEFINES += H_BUILDING_LIBHEKKEL ;

# <pe-src>
SharedLibrary libhekkel.so :
	HAppResFile.cpp
	HButtonBar.cpp
	HColorControl.cpp
	HColorPicker2.cpp
	HColorUtils.cpp
	HDialog.cpp
	HDialogViews.cpp
	HError.cpp
	HHelpWindow.cpp
	HLazyObject.cpp
	HPreferences.cpp
	HStream.cpp
	HTabSheet.cpp
	MAlert.cpp
	MTextAddOn.cpp
	MThread.cpp
	:	$(RX_LIB) be $(STDC++LIB)
	;
# </pe-src>
MakeLocate libhekkel.so : $(DISTRO_DIR)/lib ;

DEFINES = $(SAVED_DEFINES) ;

SubDirSysHdrs /boot/home/config/include ;
SubDirSysHdrs /boot/common/include ;
SubDirSysHdrs /boot/system/develop/headers/private/tracker ;
LINKFLAGS += -L/boot/home/config/lib -L/boot/common/lib ;

#<pe-src>
Application Pe :
	Benaphore.cpp
	CCharObject.cpp
	CDiff.cpp
	CDiffWindow.cpp
	CDoc.cpp
	CDocIO.cpp
	CDocWindow.cpp
	CFilterChoiceDialog.cpp
	CFindDialog.cpp
	CFtpDialog.cpp
	CFtpListItem.cpp
	CFtpStream.cpp
	CGlossary.cpp
	CGoToLine.cpp
	CGrepBox.cpp
	CHtmlBar.cpp
	CInfoDialog.cpp
	CKeyCapturer.cpp
	CKeyMapper.cpp
	CLanguageInterface.cpp
	CLanguageAddOn.cpp
	CLineObject.cpp
	CListBox.cpp
	CLogin.cpp
	CMenuItem.cpp
	CMessageItem.cpp
	CMimeBox.cpp
	COpenSelection.cpp
	CPathsBox.cpp
	CPrefsDialog.cpp
	CProjectFile.cpp
	CProjectJamFile.cpp
	CProjectMakeFile.cpp
	CProjectRoster.cpp
	CRegex.cpp
	CStdErrBox.cpp
	CStdErrParser.cpp
	CUrlOpener.cpp
	CFontStyle.cpp
	MTextAddOnImpl.cpp
	PAbout.cpp
	PAddOn.cpp
	PApp.cpp
	PCmd.cpp
	PDoc.cpp
	PErrorWindow.cpp
	PFindFunctionDialog.cpp
	PGlossyWindow.cpp
	PGroupWindow.cpp
	PItalicMenuItem.cpp
	PJumpToProcedure.cpp
	PKeyDownFilter.cpp
	PLongAction.cpp
	PMessageWindow.cpp
	PProjectWindow.cpp
	PScrollBar.cpp
	PSplitter.cpp
	PStatus.cpp
	PText.cpp
	PTextBuffer.cpp
	PToolBar.cpp
	PTypeAHeadList.cpp
	Sstdio.cpp
	utf-support.cpp
	Utils.cpp
	:	libhekkel.so pcreposix pcre tracker mail textencoding be $(STDC++LIB)
	;
#	</pe-src>
if $(OSPLAT) = X86 {
	# avoid warning about strftime("%x") in CGlossary:
	ObjectC++Flags CGlossary.cpp : -Wno-format ;
}

XRes Pe :
	Bindings.rsrc
	Cursor.rsrc
	Dialog-Colorpicker.rsrc
	Dialog-FontTabs.rsrc
	Dialog-Ftp.rsrc
	Dialog-Info.rsrc
	Dialog-Login.rsrc
	Dialog-Open.rsrc
	Dialog-Preferences.rsrc
	Dialog-Wrap.rsrc
	HtmlPalette.rsrc
	Icons.rsrc
	Menus.rsrc
	MimeInfo.rsrc
	ToolBarIcons.rsrc
	ToolBars.rsrc
	UTF-Mappings.rsrc
	UTF-Tables.rsrc
	WordBreakTable.rsrc
	;

Rez Pe : [ FDirName $(TOP) Resources Now.r ] ;

MimeSet Pe ;
